{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo-app\\\\client\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport api from \"../services/api\";\nimport TaskForm from \"./TaskForm\";\nimport TaskList from \"./TaskList\";\nimport { toast } from \"react-toastify\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\"); // change if deployed\n\nexport default function Dashboard() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // ✅ Store JWT token from URL (on first Google login)\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const token = params.get(\"token\");\n    if (token) {\n      localStorage.setItem(\"token\", token);\n      navigate(\"/dashboard\"); // Clean up URL\n    }\n  }, [location, navigate]);\n\n  // ✅ Fetch tasks\n  const fetchTasks = async () => {\n    try {\n      setLoading(true);\n      const res = await api.get(\"/tasks\");\n      setTasks(res.data);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load tasks\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // ✅ Real-time listeners via Socket.IO\n  useEffect(() => {\n    socket.on(\"task:created\", () => {\n      toast.info(\"📥 A new task was added\");\n      fetchTasks();\n    });\n    socket.on(\"task:updated\", () => {\n      toast.info(\"🔄 A task was updated\");\n      fetchTasks();\n    });\n    socket.on(\"task:deleted\", () => {\n      toast.info(\"🗑️ A task was deleted\");\n      fetchTasks();\n    });\n    return () => {\n      socket.off(\"task:created\");\n      socket.off(\"task:updated\");\n      socket.off(\"task:deleted\");\n    };\n  }, []);\n\n  // ✅ Apply filtering\n  const filteredTasks = tasks.filter(task => {\n    const now = new Date();\n    const due = new Date(task.dueDate);\n    if (filter === \"today\") return due.toDateString() === now.toDateString();\n    if (filter === \"overdue\") return due < now && task.status !== \"completed\";\n    if (filter === \"completed\") return task.status === \"completed\";\n    return true;\n  });\n\n  // ✅ Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold\",\n        children: \"\\uD83D\\uDCCB Your Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded text-sm\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onTaskCreated: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-3 mb-4\",\n      children: [\"all\", \"today\", \"overdue\", \"completed\"].map(f => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter(f),\n        className: `px-4 py-2 rounded ${filter === f ? \"bg-blue-600 text-white\" : \"bg-white border\"}`,\n        children: f.toUpperCase()\n      }, f, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this), !loading && filteredTasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks to show.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 50\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: filteredTasks,\n      refresh: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"h4vJy5NG1dICu/zTElIPCeZP1GE=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","useLocation","useNavigate","api","TaskForm","TaskList","toast","io","jsxDEV","_jsxDEV","socket","Dashboard","_s","tasks","setTasks","filter","setFilter","loading","setLoading","error","setError","location","navigate","params","URLSearchParams","search","token","get","localStorage","setItem","fetchTasks","res","data","err","console","on","info","off","filteredTasks","task","now","Date","due","dueDate","toDateString","status","handleLogout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onTaskCreated","map","f","toUpperCase","length","refresh","_c","$RefreshReg$"],"sources":["D:/todo-app/client/src/components/Dashboard.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport api from \"../services/api\";\nimport TaskForm from \"./TaskForm\";\nimport TaskList from \"./TaskList\";\nimport { toast } from \"react-toastify\";\nimport { io } from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:5000\"); // change if deployed\n\nexport default function Dashboard() {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // ✅ Store JWT token from URL (on first Google login)\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const token = params.get(\"token\");\n    if (token) {\n      localStorage.setItem(\"token\", token);\n      navigate(\"/dashboard\"); // Clean up URL\n    }\n  }, [location, navigate]);\n\n  // ✅ Fetch tasks\n  const fetchTasks = async () => {\n    try {\n      setLoading(true);\n      const res = await api.get(\"/tasks\");\n      setTasks(res.data);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load tasks\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // ✅ Real-time listeners via Socket.IO\n  useEffect(() => {\n    socket.on(\"task:created\", () => {\n      toast.info(\"📥 A new task was added\");\n      fetchTasks();\n    });\n\n    socket.on(\"task:updated\", () => {\n      toast.info(\"🔄 A task was updated\");\n      fetchTasks();\n    });\n\n    socket.on(\"task:deleted\", () => {\n      toast.info(\"🗑️ A task was deleted\");\n      fetchTasks();\n    });\n\n    return () => {\n      socket.off(\"task:created\");\n      socket.off(\"task:updated\");\n      socket.off(\"task:deleted\");\n    };\n  }, []);\n\n  // ✅ Apply filtering\n  const filteredTasks = tasks.filter((task) => {\n    const now = new Date();\n    const due = new Date(task.dueDate);\n    if (filter === \"today\") return due.toDateString() === now.toDateString();\n    if (filter === \"overdue\") return due < now && task.status !== \"completed\";\n    if (filter === \"completed\") return task.status === \"completed\";\n    return true;\n  });\n\n  // ✅ Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"p-6 bg-gray-100 min-h-screen\">\n      {/* Header with Logout */}\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-2xl font-semibold\">📋 Your Tasks</h2>\n        <button\n          onClick={handleLogout}\n          className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded text-sm\"\n        >\n          Logout\n        </button>\n      </div>\n\n      {/* Task Form */}\n      <TaskForm onTaskCreated={fetchTasks} />\n\n      {/* Filter Buttons */}\n      <div className=\"flex gap-3 mb-4\">\n        {[\"all\", \"today\", \"overdue\", \"completed\"].map((f) => (\n          <button\n            key={f}\n            onClick={() => setFilter(f)}\n            className={`px-4 py-2 rounded ${\n              filter === f ? \"bg-blue-600 text-white\" : \"bg-white border\"\n            }`}\n          >\n            {f.toUpperCase()}\n          </button>\n        ))}\n      </div>\n\n      {/* Loading / Error / Empty states */}\n      {loading && <p>Loading tasks...</p>}\n      {error && <p className=\"text-red-500\">{error}</p>}\n      {!loading && filteredTasks.length === 0 && <p>No tasks to show.</p>}\n\n      {/* Task List */}\n      <TaskList tasks={filteredTasks} refresh={fetchTasks} />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}